<?xml version="1.0" encoding="UTF-8"?>
<?xml-model href="http://docbook.org/xml/5.1/rng/docbook.rng" schematypens="http://relaxng.org/ns/structure/1.0"?>
<?xml-model href="http://docbook.org/xml/5.1/sch/docbook.sch" type="application/xml" schematypens="http://purl.oclc.org/dsdl/schematron"?>

<article xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink"
    version="5.1">
    <info>
        <title>X Stack Multiclient Blackjack</title>
        <author>
            <personname>Janik Schnellenback</personname>
            <email>janik.schnellbach@tum.de</email>
        </author>
        <author>
            <personname>Maximilian Karpfinger</personname>
            <email>maximilian.karpfinger@tum.de</email>
        </author>
        <author>
            <personname>Felix Hennerkes</personname>
            <email>ga38hom@mytum.de</email>
        </author>
        <author>
            <personname>Daniel Meint</personname>
            <email>d.meint@tum.de</email>
        </author>
        <orgname>Technical University of Munich (TUM)</orgname>
    </info>
    <section>
        <title>Introduction</title>
        <para>Current XML technologies provide a full stack of modeling languages, implementation
            languages, and tools for web applications that is stable, platform independent, and
            based on open standards. A particularly strong point of what we call the X stack is that
            data are encoded with XML end-to-end and that XML technologies can be used whereever XML
            data need to be processed. Combining principles and proven practices from document and
            software engineering, this paper documents architecture, modeling techniques, and
            implementation strategies for the simple browser game Guess the Number (GN).</para>
    </section>
    <section>
        <title>Description of the case study</title>
        <para>We implement the popular casino game Blackjack as a multi-client web application.
            Globally, there are a variety of rulesets with slight differences. We seek to employ the
            most universally accepted variation commonly found in Las Vegas casinos.</para>
        <para>Up to five <emphasis>players</emphasis> compete not against each other, but separately
            against the <emphasis>dealer</emphasis>. The objective of each player is to draw cards
            and maximize the sum of their respective values (<emphasis>hand value</emphasis>)
            without exceeding a sum of 21 (<emphasis>bust</emphasis>). Players win by achieving one
            of the following final game states:
            <itemizedlist>
                <listitem>
                    <para>A hand value of 21 with only two cards (<emphasis>blackjack</emphasis>)</para>
                </listitem>
                <listitem>
                    <para>A value higher than dealer's without exceeding 21</para>
                </listitem>
                <listitem>
                    <para>A value less than 21 while the dealer busts</para>
                </listitem>
            </itemizedlist>
        </para>
        <para>Before the actual playing begins, players place their <emphasis>bets</emphasis>. Our
            version does not limit players in the amount they want to bet, but prohitibts them from
            playing without betting at all.</para>
        <para> At the beginning of a round, each player is dealt two cards face up. The dealer
            receives one exposed card that everyone can see and one <emphasis>hidden</emphasis>
            card. Now, the dealer asks each player, going clockwise around the table, whether they
            want to improve their hand by drawing additional cards
            (<emphasis>hit</emphasis>).</para>
        <para>The game is played with a single deck of french playing cards. Number cards are worth
            their value, e.g. the seven of hearts is worth seven points, face cards (Jack, Queen,
            and King) are worth ten points, and an Ace can be counted as either one or eleven,
            depending on what is more favorable in a specific situation. A hand containing an Ace
            counted as eleven is referred to as a <emphasis>soft</emphasis> hand, because the value
            of the Ace will change to a one to prevent the player from busting if he was to draw
            another card and otherwise exceed 21. A card's suit is irrelevant in Blackjack.</para>
        <para>After all players have finished their turn, the dealer players in a predetermined
            manner: He draws cards as long as his hand is worth less than 17 points and must stand on
            a soft 17 or better.</para>

    </section>
    <section>
        <title>Architecture</title>

    </section>
    <section>
        <title>The component Model</title>
        <section>
            <title>Modeling the component Model</title>

        </section>
        <section>
            <title>Implementing the component Model</title>
        </section>
    </section>
    <section>
        <title>The component View</title>
        <section>
            <title>Modeling the component View</title>

        </section>
        <section>
            <title>Implementing the component View</title>

        </section>
    </section>
    <section>
        <title>The component Controller</title>
        <section>
            <title>Modeling the component Controller</title>

        </section>
        <section>
            <title>Implementing the component Controller</title>

        </section>
    </section>
    <section>
        <title>Conclusions</title>

    </section>
    <bibliography>
        <biblioentry xreflabel="A14" xml:id="WebAppArchitecture">
            <bibliomisc>Adamkó, Attila. "Internet Tools and Services". Lecture notes.
                https://gyires.inf.unideb.hu/GyBITT/08/index.html. Last accessed on 2019 February
                20</bibliomisc>
        </biblioentry>
        <biblioentry xreflabel="BaseX" xml:id="BaseXHome">
            <bibliomisc> BaseX homepage. http://basex.org. Last accessed on 2019 February 25
            </bibliomisc>
        </biblioentry>
        <biblioentry xreflabel="B16" xml:id="BrüggemannXMLAppsBalisage16">
            <bibliomisc>Brüggemann-Klein, Anne. "The XML Expert's Path to Web Applications: Lessons
                learned from document and from software engineering." Presented at XML In, Web Out:
                International Symposium on sub rosa XML, Washington, DC, August 1, 2016. In
                Proceedings of XML In, Web Out: International Symposium on sub rosa XML. Balisage
                Series on Markup Technologies, vol. 18 (2016).
                https://doi.org/10.4242/BalisageVol18.Bruggemann-Klein01</bibliomisc>
        </biblioentry>
        <biblioentry xreflabel="BD13" xml:id="BrüggeDutoitSWE">
            <bibliomisc>Brügge, Bernd and Allen H. Dutoit. "Object-Oriented Software Engineering
                Using UML, Patterns, and Java." Pearson 2013 (Kindle Edition)</bibliomisc>
        </biblioentry>
        <biblioentry xreflabel="BMRSS00" xml:id="POSA">
            <bibliomisc>Buschmann, Frank, Regine Meunier, Hans Rohner, Peter Sommerlad, and Michael
                Stal. "Pattern-Oriented Software Architecture, A System of Patterns." Wiley 2000
                (Kindle Edition)</bibliomisc>
        </biblioentry>
        <biblioentry xreflabel="E03" xml:id="EvansDDD">
            <bibliomisc>Eric Evans. "Domain-Driven Design: Tackling Complexity in the Heart of
                Software." Addison-Wesley 2003 (Kindle Edition)</bibliomisc>
        </biblioentry>
        <biblioentry xreflabel="F06" xml:id="FowlerFurtherEnterpriseApplicationArchitecture">
            <bibliomisc>Fowler, Martin. "Development of Further Patterns of Enterprise Application
                Architecture." https://www.martinfowler.com/eaaDev/. Last accessed on 2019 February
                20</bibliomisc>
        </biblioentry>
        <biblioentry xreflabel="F12" xml:id="FowlerEnterpriseApplicationArchitecture">
            <bibliomisc>Fowler, Martin. "Patterns of Enterprise Application Architecture."
                Addison-Wesley 2012 (Kindle Edition)</bibliomisc>
        </biblioentry>
        <biblioentry xreflabel="G06" xml:id="JavaConcurrency">
            <bibliomisc>Goetz, Brian. "Java Concurrency in Practice." Addison-Wesley 2006 (Kindle
                Edition)</bibliomisc>
        </biblioentry>
    </bibliography>
</article>
